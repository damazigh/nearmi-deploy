apiVersion: v1
kind: Namespace
metadata:
  name: nearmi
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-token
  namespace: nearmi
  labels:
    app: keycloak
data:
  KEYCLOAK_USER: YWRtaW4=
  KEYCLOAK_PASSWORD: SGVsbG9IYWxvTHVmZnlEaWFibGVKYW1iZSFfODgyNDQ0QXplcnR5
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-postgres-token
  namespace: nearmi
  labels:
    app: keycloak
data:
  DB_USER: a2V5Y2xvYWs=
  DB_PASSWORD: VmlvdS0tKHwhUm95YU1halJhaXBvbmNlVHRsYW11cjY3ODc4
---
apiVersion: v1
data:
  PROXY_ADDRESS_FORWARDING: 'true'
  DB_VENDOR: postgres
  DB_ADDR: postgres-svc.nearmi.svc.cluster.local
  DB_DATABASE: keycloak
  DB_USER: keycloak
kind: ConfigMap
metadata:
  labels:
    app: keycloak
  name: keycloak-config
  namespace: nearmi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  namespace: nearmi
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: 'ingress.nearmi'
      http:
        paths:
          - path: /keycloak(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: nearmi
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: nearmi
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:12.0.1
          envFrom:
            - configMapRef:
                name: keycloak-config
            - secretRef:
                name: keycloak-token
            - secretRef:
                name: keycloak-postgres-token
          ports:
            - name: http
              containerPort: 8080

          readinessProbe:
            httpGet:
              path: /auth
              port: 8080
